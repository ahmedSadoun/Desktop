name: "RetailCertificatesAndDepositsFlow"
trackingId: "3FB70249-EAB9-4321-8677-55E7EA55F933"
type: "task"
version: "2.0"
interface: {}
configuration:
  requiresAuthorization: false
variables:
- name: "retailCdCertInvestmentEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CD.INVESTMENT_CERTIFICATES"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "retailCdCertSavingForeignEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CD.SAVINGS.FOREIGN_CURRENCY"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "retailCdCertSavingLocalEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CD.SAVINGS.LOCAL_CURRENCY"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "retailCdDepositsEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CD.DEPOSITS"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "retailCdCertificatesEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CD.CERTIFICATES"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "retailCertAndDepEntityChoices"
  type: "entity"
  entityName: "NBE.ENT.RETAIL.CERTIFICATES_DEPOSITS"
  description: ""
  metadata:
    isFreeMarker: false
  system: false
- name: "outputMsg"
  type: "string"
  description: ""
  metadata:
    isFreeMarker: true
  system: false
defaultTransitions:
  actions:
    system.startTaskFlow: "resolveCertAndDepositEntity"
states:
  invokeSurveyFlow:
    component: "System.InvokeFlow"
    properties:
      inputParameters: []
      flow: "SurveyFlow"
      outputParameters: []
    transitions: {}
    metadata:
      propertySheetIsFreeMarkerMap:
        flow: false
  invokeRetailFlow:
    component: "System.InvokeFlow"
    properties:
      inputParameters: []
      flow: "RetailFlow"
      outputParameters: []
    transitions: {}
    metadata:
      propertySheetIsFreeMarkerMap:
        flow: false
  resolveCertAndDepositEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CERTIFICATES_DEPOSITS.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCertAndDepEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "invokeRetailFlow"
        menu: "invokeMainMenuFlow"
      next: "switchRetailCertAndDepChoice"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  certSavingForeignOutputMsg:
    component: "System.CommonResponse"
    properties:
      metadata:
        responseItems:
        - text: "${rb(outputMsg.value)}"
          type: "text"
        globalActions:
        - payload:
            action: "survey"
          label: "${rb('Survey')}"
          type: "postback"
          keyword: "${rb('Survey Keywords')}"
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        survey: "invokeSurveyFlow"
        back: "resetCertSavingsForeignChoicesVariable"
        menu: "invokeMainMenuFlow"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  resolveCertSavingsForeignEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CD.CERT.SAVING_FOREIGN.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCdCertSavingForeignEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "resetRetailCertificateChoiceVariable"
        menu: "invokeMainMenuFlow"
      next: "setCertSavingForeignVariable"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  invokeStartFlow:
    component: "System.InvokeFlow"
    properties:
      inputParameters: []
      flow: "StartFlow"
      outputParameters: []
    transitions: {}
    metadata:
      propertySheetIsFreeMarkerMap:
        flow: false
  invokeMainMenuFlow:
    component: "System.InvokeFlow"
    properties:
      inputParameters: []
      flow: "MainMenuFlow"
      outputParameters: []
    transitions: {}
    metadata:
      propertySheetIsFreeMarkerMap:
        flow: false
  invokeExitFlow:
    component: "System.InvokeFlow"
    properties:
      inputParameters: []
      flow: "ExitFlow"
      outputParameters: []
    transitions: {}
    metadata:
      propertySheetIsFreeMarkerMap:
        flow: false
  resolveRetailDepositsEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CD.DEPOSITS.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCdDepositsEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "resetCertAndDepChoiceVariables"
        menu: "invokeMainMenuFlow"
      next: "setDepositsOutputMsgVariable"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  switchRetailCertificatesEntity:
    component: "System.Switch"
    properties:
      variable: "retailCdCertificatesEntityChoices"
    transitions:
      actions:
        Belady Certificates (for Egyptian expatriates): "setCertBeladyOutputMsgVariable"
        Saving Certificates (Local Currency): "resolveCertSavingsLocalEntity"
        Saving Certificates (Foreign currency): "resolveCertSavingsForeignEntity"
        Investment Certificates: "resolveCertInvestmentEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        source: true
        requiresAuthorization: false
  resolveCertSavingsLocalEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CD.CERT.SAVING_LOCAL.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCdCertSavingLocalEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "resetRetailCertificateChoiceVariable"
        menu: "invokeMainMenuFlow"
      next: "setCertSavingLocalOutputMsgVariable"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  resetCertSavingsForeignChoicesVariable:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCdCertSavingForeignEntityChoices,outputMsg"
    transitions:
      next: "resolveCertSavingsForeignEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  resolveCertInvestmentEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CD.CERT.INVEST.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCdCertInvestmentEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "resetRetailCertificateChoiceVariable"
        menu: "invokeMainMenuFlow"
      next: "setCertInvestmentOutputMsgVariable"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  resetInvestmentChoicesVariable:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCdCertInvestmentEntityChoices,outputMsg"
    transitions:
      next: "resolveCertInvestmentEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  resetRetailCertificateChoiceVariable:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCdCertificatesEntityChoices"
    transitions:
      next: "resolveRetailCertificateEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  switchRetailCertAndDepChoice:
    component: "System.Switch"
    properties:
      variable: "retailCertAndDepEntityChoices"
    transitions:
      actions:
        Deposits: "resolveRetailDepositsEntity"
        Certificates: "resolveRetailCertificateEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        source: true
        requiresAuthorization: false
  setCertSavingForeignVariable:
    component: "System.SetVariable"
    properties:
      variable: "outputMsg"
      value: "${'RETAIL.CD.CERT.SAVING_FOREIGN.' + retailCdCertSavingForeignEntityChoices.value.value + '.MSG'}"
    transitions:
      next: "certSavingForeignOutputMsg"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        value: true
        requiresAuthorization: false
  certBeladyOutputMsg:
    component: "System.CommonResponse"
    properties:
      metadata:
        responseItems:
        - text: "${rb(outputMsg.value)}"
          type: "text"
        globalActions:
        - payload:
            action: "survey"
          label: "${rb('Survey')}"
          type: "postback"
          keyword: "${rb('Survey Keywords')}"
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        survey: "invokeSurveyFlow"
        back: "resetRetailCertificateChoiceVariable"
        menu: "invokeMainMenuFlow"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  depositsOutputMsg:
    component: "System.CommonResponse"
    properties:
      metadata:
        responseItems:
        - text: "${rb(outputMsg.value)}"
          type: "text"
        globalActions:
        - payload:
            action: "survey"
          label: "${rb('Survey')}"
          type: "postback"
          keyword: "${rb('Survey Keywords')}"
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        survey: "invokeSurveyFlow"
        back: "resetCdDepositsChoicesVariable"
        menu: "invokeMainMenuFlow"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  resetCdDepositsChoicesVariable:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCdDepositsEntityChoices,outputMsg"
    transitions:
      next: "resolveRetailDepositsEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  setDepositsOutputMsgVariable:
    component: "System.SetVariable"
    properties:
      variable: "outputMsg"
      value: "${'RETAIL.CD.DEPOSITS.' + retailCdDepositsEntityChoices.value.value + '.MSG'}"
    transitions:
      next: "depositsOutputMsg"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        value: true
        requiresAuthorization: false
  setCertSavingLocalOutputMsgVariable:
    component: "System.SetVariable"
    properties:
      variable: "outputMsg"
      value: "${'RETAIL.CD.CERT.SAVING_LOCAL.' + retailCdCertSavingLocalEntityChoices.value.value + '.MSG'}"
    transitions:
      next: "certSavingLocalOutputMsg"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        value: true
        requiresAuthorization: false
  resolveRetailCertificateEntity:
    component: "System.CommonResponse"
    properties:
      useFullEntityMatches: true
      metadata:
        responseItems:
        - text: "${rb('Please Choose')}"
          type: "text"
          actions:
          - iteratorVariable: "action"
            iteratorExpression: "${system.entityToResolve.value.userChoiceActions}"
            payload:
              variables:
                ${action.variable}: "${action.stringValue}"
              action: "${action.action}"
            label: "${rb('RETAIL.CD.CERT.' + action.label)}"
            type: "postback"
        globalActions:
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      variable: "retailCdCertificatesEntityChoices"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        back: "resetCertAndDepChoiceVariables"
        menu: "invokeMainMenuFlow"
      next: "switchRetailCertificatesEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  resetCertAndDepChoiceVariables:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCertAndDepEntityChoices"
    transitions:
      next: "resolveCertAndDepositEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  certInvestmentOutputMsg:
    component: "System.CommonResponse"
    properties:
      metadata:
        responseItems:
        - text: "${rb(outputMsg.value)}"
          type: "text"
        globalActions:
        - payload:
            action: "survey"
          label: "${rb('Survey')}"
          type: "postback"
          keyword: "${rb('Survey Keywords')}"
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        survey: "invokeSurveyFlow"
        back: "resetInvestmentChoicesVariable"
        menu: "invokeMainMenuFlow"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  setCertBeladyOutputMsgVariable:
    component: "System.SetVariable"
    properties:
      variable: "outputMsg"
      value: "${'RETAIL.CD.CERT.' + retailCdCertificatesEntityChoices.value.value + '.MSG'}"
    transitions:
      next: "certBeladyOutputMsg"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        value: true
        requiresAuthorization: false
  resetCertSavingsLocalChoicesVariable:
    component: "System.ResetVariables"
    properties:
      variableList: "retailCdCertSavingLocalEntityChoices,outputMsg"
    transitions:
      next: "resolveCertSavingsLocalEntity"
    metadata:
      propertySheetIsFreeMarkerMap:
        variableList: false
        requiresAuthorization: false
  certSavingLocalOutputMsg:
    component: "System.CommonResponse"
    properties:
      metadata:
        responseItems:
        - text: "${rb(outputMsg.value)}"
          type: "text"
        globalActions:
        - payload:
            action: "survey"
          label: "${rb('Survey')}"
          type: "postback"
          keyword: "${rb('Survey Keywords')}"
        - payload:
            action: "back"
          label: "${rb('Back')}"
          type: "postback"
          keyword: "${rb('Back Keywords')}"
        - payload:
            action: "menu"
          label: "${rb('Menu')}"
          type: "postback"
          keyword: "${rb('Menu Keywords')}"
        - payload:
            action: "exit"
          label: "${rb('Exit')}"
          type: "postback"
          keyword: "${rb('Exit Keywords')}"
      processUserMessage: true
    transitions:
      actions:
        exit: "invokeExitFlow"
        system.textReceived: "invokeStartFlow"
        survey: "invokeSurveyFlow"
        back: "resetCertSavingsLocalChoicesVariable"
        menu: "invokeMainMenuFlow"
    metadata:
      propertySheetIsFreeMarkerMap:
        maxPrompts: false
        useFullEntityMatches: false
        cancelPolicy: true
        variable: false
        processUserMessage: false
        keepTurn: false
        multiValue: false
        requiresAuthorization: false
  setCertInvestmentOutputMsgVariable:
    component: "System.SetVariable"
    properties:
      variable: "outputMsg"
      value: "${'RETAIL.CD.CERT.INVEST.' + retailCdCertInvestmentEntityChoices.value.value + '.MSG'}"
    transitions:
      next: "certInvestmentOutputMsg"
    metadata:
      propertySheetIsFreeMarkerMap:
        variable: false
        value: true
        requiresAuthorization: false
